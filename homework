Low-cost  авиакомпания

Видение

Требуется Web-приложение для работы лоукост авиакомпании: бронирование, оплата билетов.

Приложение должно реализовывать следующие функции: 
	 
	 - Выбор маршрута.
	 - Просмотр полного списка рейсов по заданному маршруту.
	 - Просмотр списка рейсов по заданному маршруту на заданную дату.
	 - Просмотр информации о рейсе (дата отправления, время отправления, точное место                      	   
     отправления, время прибытия, время в пути, количество свободных мест, стоимость билета на текущий момент).
	 - Заказ билета
	 - Оплата билета
	 - Стоимость билета может изменяться с приближением даты рейса и изменением наполненности самолёта.
	
	 
1. Пользователь.
Параметры пользователя:
	- Id.
	- Наличие Багажа.
	- Право на первоочередную регистрацию и посадку.


2. Рейс
Параметры рейса:
	- Id.
	- Наполненность самолёта.
	- Маршрут.
	- Длина маршрута.
	- Дата и время отправления.	
	- Дата и время прибытия.
	- Место прибытия.

3. Билет 
3.1 Бронирование билета.
	Основной сценарий: 
	 - пользователь заполняет поля «From» и «To», указывая страну, город и/или аэропорт через 
     запятую (например: UK, London, Heathrow → Belarus, Airport Brest) и дату отправления.
	 - Пользователь нажимает кнопку «Search».
	 - Отображается список рейсов на заданную дату по заданному маршруту.
	 - Пользователь выбирает рейс нажав на его название.
	 - Отображается форма с полной информацией о рейсе.
	 - Пользователь нажимает кнопку «Bоок a ticket». 
	 - Пользователь заполняет данные, выбирает необходимое количество билетов, указывает наличие 
     либо отсутствие багажа и права на первоочередную посадку и регистрацию.
	 - Пользователь нажимает кнопку «Book».
	 - Если были введены некорректные данные, то возникает соответствующее предупреждение.
	 - Если данные были введены корректно, данные сохраняются в базе данных.

	Сценарий отмены брони:
	 - Авторизированный пользователь заполняет поля «From» и «To», указывая страну, город и/или 
     аэропорт через запятую (например: UK, London, Heathrow → Belarus, Airport Brest) и дату отправления.
	 - Пользователь нажимает кнопку «Search».
	 - Отображается список рейсов на заданную дату по заданному маршруту.
	 - Пользователь выбирает рейс нажав на его название.
	 - Отображается форма с полной информацией о рейсе.
	 - Пользователь нажимает кнопку «Book a ticket».
	 - В открывшейся форме пользователь заполняет данные.
	 - Пользователь нажимает кнопку «Cancel».
	 - Данные не сохраняются в базе данных, открывается форма выбора маршрута.

3.2 Оплата билета.
	Основной сценарий:
	 - Пользователь заходит в свой профиль, в поле «Booked tickets» выбирает нужный билет и нажимает на его.
	 - Открывается форма в которой указана информация о рейсе, стоимость рейса, стоимость провоза 
     багажа(при его наличии) и полная стоимость билета.
	 - Пользователь нажимает кнопку «Pay».
	 - Данные об оплате заносятся в базу данных.

	Сценарий отмены оплаты:
	 - - Пользователь заходит в свой профиль, в поле «Booked tickets» выбирает нужный билет и нажимает на его.
	 - Открывается форма в которой указана информация о рейсе, стоимость рейса, стоимость провоза 
     багажа(при его наличии) и полная стоимость билета.
	 - Пользователь нажимает кнопку «Cancel».
	 - Данные не заносятся в базу данных, открывается профиль пользователя.

3.3 Стоимость билета.
 - Стоимость билета состоит из стоимости рейса и стоимости провоза багажа (при его наличии). Стоимость провоза 
   багажа может быть выше стоимости рейса. 
 - Стоимость билета зависит от даты оплаты – с приближением даты отправления стоимость возрастает.
 - Стоимость билета зависит от наполненности самолёта –  с повышением наполненности стоимость может снизится и наоборот.


